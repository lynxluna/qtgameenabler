Qt GameEnabler
==============

The Qt GameEnabler framework consists of two parts:

1. GE::GameWindow: A QGLWidget-like class which allows the inheriter to use
   real OpenGL ES 2.0 instead of encapsulated QtOpenGL. The window will always
   be full screen and without any compositing enabled: Everything is rendered
   directly on the screen. This prevents the user from using Qt's UI
   functionality, but other parts of it are still usable. For example, QImage
   can be used for loading GL textures.

2. Audio framework: A set of classes providing a very simple and easy-to-use
   system for loading WAV files as audio buffers and playing them with dynamic
   attributes (speed, volume, and so on). Audio playback is implemented using
   custom mixing and a single instance of QAudioOutput.

   This framework has been tested on Symbian^3 (Nokia N8-00, Nokia E7-00),
   Maemo (Nokia N900), MeeGo 1.2 Harmattan (Nokia N950), Windows XP, and
   Windows 7 with Qt 4.7.3 and PowerVR OpenGL 2.0 emulation libraries.

-------------------------------------------------------------------------------

PREREQUISITES 

- Qt basics 
- OpenGL basics

-------------------------------------------------------------------------------
 
IMPORTANT CLASSES 

GameWindow: The QGLWidget replacement with native OpenGL ES 2.0.

AudioSource: An interface from which audio data can be pulled. All of the 
playing is done via this class in GE::Audio. Custom audio sources must also be  
inherited from this interface.

AudioBuffer: A class to contain a single audio buffer (for example, a single 
audio file, such as WAV). The audio buffer itself is not able to play 
anything, it only contains the audio data.

AudioBufferPlayInstance: A class derived from IAudioSource which points to an 
AudioBuffer and can provide its audio data via IAudioSource's pull 
functionality.

AudioMixer: A helper class which contains a list of IAudioSources and methods 
to manipulate them. All of the items in this list are mixed together when the 
mixer's pullAudio is called.

-------------------------------------------------------------------------------

BUILD & INSTALLATION INSTRUCTIONS 
  
Preparations 
~~~~~~~~~~~~ 
Check that you have at least the latest Qt/Qt SDK installed in the development
environment and on the device.

The application can be compiled directly to any device with OpenGL ES 2.0 
support, for example, Maemo or Symbian^3. However, if you wish to compile it 
on some other platform, for example, desktop Windows, you must have external 
OpenGL ES 2.0 emulation libraries. With Windows or Linux (32bit) desktop, you 
can use Khronos OpenGL ES 2.0 PC-emulation libraries from www.imgtec.com 
(http://www.imgtec.com/powervr/insider/sdkdownloads/index.asp#GLES2).


Build & installation instructions using Qt SDK
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
1. Open the project file: 
   File > Open File or Project, select QtGameEnablerTest.pro 
  
2. Select target(s), for example Desktop and Symbian^3, and press the Finish 
   button. 
  
3. Compile the project. If you are building for Desktop, modify your .pro 
   file's 'windows' section's GLES2 include and library paths according to 
   where you have installed the SDK: 
   'INCLUDEPATH += /PowerVRSDK/Builds/OGLES2/Include' and 
   'LIBS +=  -L/PowerVRSDK/Builds/OGLES2/WindowsPC/Lib' must point to valid 
   locations.

4. You are now able to run the software. 

-------------------------------------------------------------------------------
  
COMPATIBILITY 
  
- Qt SDK 1.1
  
Tested on:  
- Nokia E6-00
- Nokia E7-00
- Nokia N8-00
- Nokia N900 (PR1.2, PR1.3 firmware)
- Nokia N950
- Windows 7
   
Developed with: 
- Qt SDK 1.1

-------------------------------------------------------------------------------
  
VERSION HISTORY 

1.1 Added MeeGo 1.2 Harmattan support.
1.0.2 Minor modifications related to Symbian audio handling.
1.0.1 Added Debian packaging files for Maemo target
1.0 First version